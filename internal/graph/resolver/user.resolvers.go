package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"duval/internal/graph"
	"duval/internal/graph/model"
	"duval/internal/pkg/user"
	"fmt"
)

// Register is the resolver for the register field.
func (r *mutationResolver) Register(ctx context.Context, input model.NewUserInput) (string, error) {
	return user.CreateUser(&input)
}

// Age is the resolver for the age field.
func (r *newUserInputResolver) Age(ctx context.Context, obj *model.NewUserInput, data *int) error {
	panic(fmt.Errorf("not implemented: Age - age"))
}

// Mutation returns graph.MutationResolver implementation.
func (r *Resolver) Mutation() graph.MutationResolver { return &mutationResolver{r} }

// NewUserInput returns graph.NewUserInputResolver implementation.
func (r *Resolver) NewUserInput() graph.NewUserInputResolver { return &newUserInputResolver{r} }

type mutationResolver struct{ *Resolver }
type newUserInputResolver struct{ *Resolver }
