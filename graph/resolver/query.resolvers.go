package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"errors"

	"github.com/cend-org/duval/graph/generated"
	"github.com/cend-org/duval/graph/model"
	"github.com/cend-org/duval/internal/token"
	"github.com/cend-org/duval/pkg/academic"
	usr "github.com/cend-org/duval/pkg/user"
)

// MyProfile is the resolver for the MyProfile field.
func (r *queryResolver) MyProfile(ctx context.Context) (*model.User, error) {
	var tok *token.Token
	var err error

	tok, err = token.GetFromContext(ctx)
	if err != nil {
		return nil, errors.New("unAuthorized")
	}

	return usr.MyProfile(tok.UserId)
}

// AcademicLevels is the resolver for the AcademicLevels field.
func (r *queryResolver) AcademicLevels(ctx context.Context) ([]model.AcademicLevel, error) {
	return academic.GetAcademicLevels()
}

// AcademicCourses is the resolver for the AcademicCourses field.
func (r *queryResolver) AcademicCourses(ctx context.Context, academicLevelID int) ([]model.AcademicCourse, error) {
	return academic.GetAcademicCourses(academicLevelID)
}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
